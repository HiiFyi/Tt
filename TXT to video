import os
import re
import requests
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import youtube_dl

API_TOKEN = '8159353352:AAEE07s669LtlhOclmZS_x3qXADM1NqXKTA'

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('Send me a TXT file with video links.')

def handle_document(update: Update, context: CallbackContext) -> None:
    file = update.message.document.get_file()
    file.download('temp.txt')

    with open('temp.txt', 'r') as f:
        links = f.readlines()

    video_files = []
    for link in links:
        link = link.strip()
        if is_valid_link(link):
            video_file = download_video(link)
            if video_file:
                video_files.append(video_file)

    os.remove('temp.txt')

    if video_files:
        for video_file in video_files:
            with open(video_file, 'rb') as video:
                update.message.reply_video(video)
            os.remove(video_file)
    else:
        update.message.reply_text('No valid links found.')

def is_valid_link(link: str) -> bool:
    # Replace with your specific website URL pattern
    return re.match(r'https?://yourwebsite\.com/video/.*', link)

def download_video(url: str) -> str:
    ydl_opts = {
        'format': 'best',
        'outtmpl': '%(title)s.%(ext)s',
        'quiet': True,
    }
    try:
        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(url, download=True)
            return ydl.prepare_filename(info_dict)
    except Exception as e:
        print(f'Error downloading {url}: {e}')
        return None

def main() -> None:
    updater = Updater(8159353352:AAEE07s669LtlhOclmZS_x3qXADM1NqXKTA)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(MessageHandler(Filters.document.mime_type("text/plain"), handle_document))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
